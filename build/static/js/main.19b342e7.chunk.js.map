{"version":3,"sources":["logo.svg","components/Header.js","components/Section1.js","components/Section2.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","Container","src","alt","href","RightMenu","CostumMenu","styled","div","Menu","MenuIcon","Section1","carInfo","data","console","log","className","map","car","id","title","description","image","range","time","topSpeed","peakPower","Wrap","style","backgroundImage","ItemText","ButtonGroup","bottom","LeftBtn","RightBtn","ArrowSpace","Arrowbtn1","Arrowbtn2","img","Section2","Button","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ouCAAe,I,qCCyBAA,I,gBAAAA,EAtBf,WACI,OACI,eAACC,EAAD,WACG,4BACC,qBAAKC,IAAI,mBAAmBC,IAAI,OAEjC,eAAC,EAAD,WACI,mBAAGC,KAAK,IAAR,qBACA,mBAAGA,KAAK,YAAR,qBACA,mBAAGA,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,wBAGJ,eAACC,EAAD,WACI,mBAAGD,KAAK,IAAR,kBACA,mBAAGA,KAAK,IAAR,0BACA,cAACE,EAAD,WAQTL,EAAUM,IAAOC,IAAR,yQAaTC,EAAKF,IAAOC,IAAR,kKASJH,EAAUE,IAAOC,IAAR,wLAUTF,EAAaC,YAAOG,IAAPH,CAAH,6C,0CCHDI,I,QAAAA,EAjDf,WACI,IAAMC,EAAQC,EAEd,OADAC,QAAQC,IAAIH,GAER,qBAAKI,UAAU,MAAf,SAEQJ,EAAQK,KAAI,SAACC,GACT,IAAOC,EAGOD,EAHPC,GAAIC,EAGGF,EAHHE,MAAOC,EAGJH,EAHIG,YAAYC,EAGhBJ,EAHgBI,MAGhBJ,EAHsBK,MAGtBL,EAFdM,KAEcN,EADdO,SACcP,EAAdQ,UACA,OAEI,eAACC,EAAD,CAAMR,GAAIA,EAAIS,MAAO,CAACC,gBAAgB,SAAD,OAAUP,EAAV,MAArC,UAEI,cAACQ,EAAD,UACG,eAAC,IAAD,WACC,6BAAKV,IACL,4BAAIC,SAKR,cAACU,EAAD,UACI,eAAC,IAAD,CAAMC,QAAM,EAAZ,UACA,cAACC,EAAD,2BAGA,cAACC,EAAD,sCAKL,eAACC,EAAD,WACC,cAACC,EAAD,CAAWlC,IAAI,2BACf,cAACmC,EAAD,CAAWnC,IAAI,uCAerCyB,EAAOpB,IAAOC,IAAV,oOAUJsB,EAAWvB,IAAOC,IAAV,kHAMRuB,EAAcxB,IAAOC,IAAV,wNAaXyB,EAAU1B,IAAOC,IAAV,kOAYP0B,EAAW3B,IAAOC,IAAV,mOAaR2B,EAAW5B,IAAOC,IAAR,kFAKV4B,EAAY7B,IAAO+B,IAAV,+GAMTD,EAAY9B,IAAO+B,IAAV,6GC9FAC,I,EAAAA,EAvBf,WACI,OACI,eAAC,EAAD,WACI,cAAC,EAAD,UACI,cAAC,IAAD,UACI,gDAGR,cAAC,IAAD,UACI,cAAC,EAAD,UAEI,cAACC,EAAD,+BAadb,EAAOpB,IAAOC,IAAV,wUAaJsB,EAAWvB,IAAOC,IAAV,uFAMRuB,EAAcxB,IAAOC,IAAV,iNASXgC,EAASjC,IAAOC,IAAV,wRC5CGiC,MATf,WACI,OACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,QAMNxC,EAAUM,IAAOC,IAAR,4C,MCCAkC,MATf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCEgB2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAGH,cAAC,EAAD,IAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.19b342e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nfunction Header() {\r\n    return (\r\n        <Container>\r\n           <a> \r\n            <img src=\"/images/logo.svg\" alt=\"\"/>\r\n           </a> \r\n           <Menu>\r\n               <a href=\"/\">model s</a>\r\n               <a href=\"./model y\">model y</a>\r\n               <a href=\"#\">model 3</a>\r\n               <a href=\"#\">model x</a>\r\n         \r\n           </Menu>\r\n           <RightMenu>\r\n               <a href=\"#\">Shop</a>\r\n               <a href=\"#\">tesla Accout</a>\r\n               <CostumMenu/>\r\n           </RightMenu>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container=styled.div`\r\nmin-height: 20px;\r\nmin-width: 100vw;\r\ndisplay: -webkit-box;\r\ndisplay: -webkit-flex;\r\ndisplay: -ms-flexbox;\r\ndisplay: flex;\r\nposition: fixed;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nflex-wrap: nowrap;\r\npadding:10px 20px;\r\n`\r\nconst Menu=styled.div`\r\ndisplay: flex;\r\nwidth: 40vw;\r\njustify-content: space-around;\r\nflex-direction: row;\r\n @media(max-width:768px){\r\n     display:none\r\n }\r\n`\r\nconst RightMenu=styled.div`\r\n display: flex;\r\n width: 225px;\r\n justify-content: space-around;\r\n align-items: center;\r\n  a{\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n  }\r\n`\r\nconst CostumMenu = styled(MenuIcon)`\r\ncursor:pointer;\r\n`\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport data from \"./carInfo.json\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport Rotate from 'react-reveal/Rotate';\r\n\r\n\r\nfunction Section1() {\r\n    const carInfo=data;\r\n    console.log(carInfo);\r\n    return (\r\n        <div className=\"car\">\r\n            {\r\n                carInfo.map((car) => {\r\n                    const {id, title, description,image,range,\r\n                    time,\r\n                    topSpeed,\r\n                    peakPower } = car;\r\n                    return (\r\n\r\n                        <Wrap id={id} style={{backgroundImage:`url(./${image})`}}>\r\n                            \r\n                            <ItemText>\r\n                               <Rotate >\r\n                                <h1>{title}</h1>\r\n                                <p>{description}</p>\r\n                                </Rotate>\r\n                            </ItemText>\r\n                            \r\n                        \r\n                            <ButtonGroup>\r\n                                <Fade bottom>\r\n                                <LeftBtn>\r\n                                    Custom Order\r\n                                </LeftBtn>\r\n                                <RightBtn>\r\n                                    Existing Inventory\r\n                                </RightBtn>\r\n                               </Fade>\r\n                            </ButtonGroup>\r\n                           <ArrowSpace>\r\n                            <Arrowbtn1 src='/images/down-arrow.svg' />\r\n                            <Arrowbtn2 src='/images/down-arrow.svg' />\r\n                            \r\n                            </ArrowSpace>\r\n                            \r\n                        </Wrap>\r\n                       \r\n                    )\r\n                })\r\n}\r\n        </div>\r\n     \r\n)\r\n}\r\n\r\nexport default Section1\r\nconst Wrap = styled.div`\r\nbackground-size: cover;\r\nbackground-position: center;\r\nbackground-repeat: no-repeat;\r\nheight:100vh;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nbackground-size: cover;\r\n`\r\nconst ItemText = styled.div`\r\npadding-top:15vh;\r\ntext-aligne:center;\r\nfont-size:12px;\r\ntext-transform: capitalize;\r\n`\r\nconst ButtonGroup = styled.div`\r\nwidth:50vw;\r\nheight:15vh;\r\nmargin: auto;\r\nmargin-bottom: 10px;\r\ndisplay: flex;\r\n\r\njustify-content: center;\r\nalign-items: center;\r\n@media (max-width:786px){\r\n    flex-direction:column;\r\n}\r\n`\r\nconst LeftBtn = styled.div`\r\nwidth:256px;\r\nheight: 40px;\r\nmargin: 10px;\r\nborder-radius: 100px;\r\nbackground-color: rgba(23,26,32,0.8);\r\ncolor:white;\r\ncursor:pointer;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\n`\r\nconst RightBtn = styled.div`\r\nwidth:256px;\r\nheight: 40px;\r\nmargin: 10px;\r\nborder-radius: 100px;\r\nbackground-color:white;\r\ncursor:pointer;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nopacity:0.65;\r\ncolor:black;\r\n`\r\nconst ArrowSpace=styled.div`\r\nheight:60px;\r\ndisplay:flex;\r\nflex-direction: column;\r\n`\r\nconst Arrowbtn1 = styled.img`\r\nwidtn:20px;\r\nheight:40px;\r\noverflow:hidden;\r\nanimation:animateDown infinite 1.2s;\r\n`\r\nconst Arrowbtn2 = styled.img`\r\nwidtn:20px;\r\nheight:40px;\r\noverflow:hidden;\r\nanimation:animateDown infinite 1s;\r\n`","import React from 'react';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Rotate from 'react-reveal/Rotate';\r\n\r\nimport styled from 'styled-components';\r\nfunction Section2() {\r\n    return (\r\n        <Wrap>\r\n            <ItemText>\r\n                <Rotate>\r\n                    <h1>accessorie</h1>\r\n                </Rotate>\r\n            </ItemText>\r\n            <Fade>\r\n                <ButtonGroup>\r\n\r\n                    <Button>\r\n\r\n                        shop now\r\n\r\n                    </Button>\r\n\r\n                </ButtonGroup>\r\n            </Fade>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section2\r\nconst Wrap = styled.div`\r\nbackground-image:url(./images/accessories.jpg);\r\nbackground-size: cover;\r\nbackground-position: center;\r\nbackground-repeat: no-repeat;\r\nheight:100vh;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nbackground-size: cover;\r\nalign-items: center;\r\ntext-transform: capitalize;\r\n`\r\nconst ItemText = styled.div`\r\npadding-top:15vh;\r\ntext-aligne:center;\r\nfont-size:12px;\r\n\r\n`\r\nconst ButtonGroup = styled.div`\r\n    display: flex;\r\n    height: 30vh;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    buttom:100px;\r\n    justify-content: space-around;\r\n`\r\nconst Button = styled.div`\r\nwidth:256px;\r\nheight: 50px;\r\nmargin: 10px;\r\nborder-radius: 100px;\r\nbackground-color: rgba(23,26,32,0.8);\r\ncolor:white;\r\ncursor:pointer;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\n@media (max-width:786px){\r\nflex-direction:column;\r\n}\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Section1 from './Section1';\r\nimport Section2 from './Section2';\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section1/>\r\n            <Section2/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\nconst Container=styled.div`\r\nheight: 100vh;\r\n`","import React from 'react';\nimport logo from './logo.svg';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n    <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    \n      <App />\n   ,\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}